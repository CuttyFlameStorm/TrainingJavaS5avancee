package App;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class Appareil implements IAppareil {
	private List<Contact> contacts = new ArrayList<Contact>();
	private Map<Integer, Appel> appels = new HashMap<Integer, Appel>(); 
	// dans les Map on utilise des objets
	

	@Override
	public void enregistrer(Contact c) {
		contacts.add(c);
		
	}
	
	//un appel sera associé à un contact. on a pas de méthode donc on va utiliser un Foreach.
	@Override
	public void enregistrer(Appel a, String numTel) {
		Contact c1 = null;
		for(Contact c:contacts)
			if(c.getNumeroTel().equals(numTel)) {
				c1 = c;
				break;
			}
		a.setContact(c1);
		//avec Map on utilise "put" pour ajouter.
		// il faudra que le numéro de l'appel soit ajouté au contact
		appels.put(a.getNumero(), a);
		
	}

	@Override
	public Contact consulter(int numero) throws Exception {
		for(Contact c:contacts) {
			if(c.getNumero() == numero)
				return c;
		}
		throw new Exception("Contact " + numero+" Introuvable");
	}

	@Override
	public List<Contact> consulter(String mc) {
		List<Contact> cts = new ArrayList<Contact>();
		for(Contact c:contacts) {
			if(c.getNom().contains(mc))
				cts.add(c);
		}
		return cts;
	}

	//cette methode est un calcul.
	// les appels on les à stocké dans une collection de type Map
	// on va faire une boucle.
	@Override
	public double coutTotalAppels() {
		double total = 0;
		for(Appel a:appels.values())
			total = total + a.cout();
		return total;
	}

	@Override
	public double coutAppels(Date d1, Date d2) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public double coutAppels(int numero) {
		// TODO Auto-generated method stub
		return 0;
	}
	
	

}
